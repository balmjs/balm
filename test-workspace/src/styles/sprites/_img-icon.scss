// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$img-icon-3d-effects-name: 'img-icon-3d_effects';
$img-icon-3d-effects-x: 0px;
$img-icon-3d-effects-y: 0px;
$img-icon-3d-effects-offset-x: 0px;
$img-icon-3d-effects-offset-y: 0px;
$img-icon-3d-effects-width: 64px;
$img-icon-3d-effects-height: 64px;
$img-icon-3d-effects-total-width: 194px;
$img-icon-3d-effects-total-height: 194px;
$img-icon-3d-effects-image: '../img/img-icon-sprite.png';
$img-icon-3d-effects: (0px, 0px, 0px, 0px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-3d_effects', );
$img-icon-connectivity-name: 'img-icon-connectivity';
$img-icon-connectivity-x: 65px;
$img-icon-connectivity-y: 0px;
$img-icon-connectivity-offset-x: -65px;
$img-icon-connectivity-offset-y: 0px;
$img-icon-connectivity-width: 64px;
$img-icon-connectivity-height: 64px;
$img-icon-connectivity-total-width: 194px;
$img-icon-connectivity-total-height: 194px;
$img-icon-connectivity-image: '../img/img-icon-sprite.png';
$img-icon-connectivity: (65px, 0px, -65px, 0px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-connectivity', );
$img-icon-device-access-name: 'img-icon-device_access';
$img-icon-device-access-x: 0px;
$img-icon-device-access-y: 65px;
$img-icon-device-access-offset-x: 0px;
$img-icon-device-access-offset-y: -65px;
$img-icon-device-access-width: 64px;
$img-icon-device-access-height: 64px;
$img-icon-device-access-total-width: 194px;
$img-icon-device-access-total-height: 194px;
$img-icon-device-access-image: '../img/img-icon-sprite.png';
$img-icon-device-access: (0px, 65px, 0px, -65px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-device_access', );
$img-icon-multimedia-name: 'img-icon-multimedia';
$img-icon-multimedia-x: 65px;
$img-icon-multimedia-y: 65px;
$img-icon-multimedia-offset-x: -65px;
$img-icon-multimedia-offset-y: -65px;
$img-icon-multimedia-width: 64px;
$img-icon-multimedia-height: 64px;
$img-icon-multimedia-total-width: 194px;
$img-icon-multimedia-total-height: 194px;
$img-icon-multimedia-image: '../img/img-icon-sprite.png';
$img-icon-multimedia: (65px, 65px, -65px, -65px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-multimedia', );
$img-icon-offline-storage-name: 'img-icon-offline_storage';
$img-icon-offline-storage-x: 130px;
$img-icon-offline-storage-y: 0px;
$img-icon-offline-storage-offset-x: -130px;
$img-icon-offline-storage-offset-y: 0px;
$img-icon-offline-storage-width: 64px;
$img-icon-offline-storage-height: 64px;
$img-icon-offline-storage-total-width: 194px;
$img-icon-offline-storage-total-height: 194px;
$img-icon-offline-storage-image: '../img/img-icon-sprite.png';
$img-icon-offline-storage: (130px, 0px, -130px, 0px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-offline_storage', );
$img-icon-performance-name: 'img-icon-performance';
$img-icon-performance-x: 130px;
$img-icon-performance-y: 65px;
$img-icon-performance-offset-x: -130px;
$img-icon-performance-offset-y: -65px;
$img-icon-performance-width: 64px;
$img-icon-performance-height: 64px;
$img-icon-performance-total-width: 194px;
$img-icon-performance-total-height: 194px;
$img-icon-performance-image: '../img/img-icon-sprite.png';
$img-icon-performance: (130px, 65px, -130px, -65px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-performance', );
$img-icon-semantics-name: 'img-icon-semantics';
$img-icon-semantics-x: 0px;
$img-icon-semantics-y: 130px;
$img-icon-semantics-offset-x: 0px;
$img-icon-semantics-offset-y: -130px;
$img-icon-semantics-width: 64px;
$img-icon-semantics-height: 64px;
$img-icon-semantics-total-width: 194px;
$img-icon-semantics-total-height: 194px;
$img-icon-semantics-image: '../img/img-icon-sprite.png';
$img-icon-semantics: (0px, 130px, 0px, -130px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-semantics', );
$img-icon-styling-name: 'img-icon-styling';
$img-icon-styling-x: 65px;
$img-icon-styling-y: 130px;
$img-icon-styling-offset-x: -65px;
$img-icon-styling-offset-y: -130px;
$img-icon-styling-width: 64px;
$img-icon-styling-height: 64px;
$img-icon-styling-total-width: 194px;
$img-icon-styling-total-height: 194px;
$img-icon-styling-image: '../img/img-icon-sprite.png';
$img-icon-styling: (65px, 130px, -65px, -130px, 64px, 64px, 194px, 194px, '../img/img-icon-sprite.png', 'img-icon-styling', );
$img-icon-spritesheet-width: 194px;
$img-icon-spritesheet-height: 194px;
$img-icon-spritesheet-image: '../img/img-icon-sprite.png';
$img-icon-spritesheet-sprites: ($img-icon-3d-effects, $img-icon-connectivity, $img-icon-device-access, $img-icon-multimedia, $img-icon-offline-storage, $img-icon-performance, $img-icon-semantics, $img-icon-styling, );
$img-icon-spritesheet: (194px, 194px, '../img/img-icon-sprite.png', $img-icon-spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
